version: '3.8'
name: template01
services:
  productservice:
    build:
      context: ./product-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./product-service:/code  # Sync local development directory with the container
    depends_on:
        - productservicedb
        - broker
    ports:
      - "8010:8000"  # Expose container port 8000 to host port 8000  

  inventoryservice:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory-service:/code  # Sync local development directory with the container
    depends_on:
        - inventoryservicedb
        - broker
    ports:
      - "8011:8000"  # Expose container port 8000 to host port 8000  

  userservice:
    build:
      context: ./user-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./user-service:/code  # Sync local development directory with the container
    depends_on:
        - userservicedb
        - broker
    ports:
      - "8012:8000"  # Expose container port 8000 to host port 8000  

  orderservice:
      build:
        context: ./order-service
        dockerfile: Dockerfile.dev
      volumes:
        - ./order-service:/code  # Sync local development directory with the container
      depends_on:
          - orderservicedb
          - broker
      ports:
        - "8013:8000"  # Expose container port 8000 to host port 8012  

  paymentservice:
        build:
          context: ./payment-service
          dockerfile: Dockerfile.dev
        volumes:
          - ./payment-service:/code  # Sync local development directory with the container
        depends_on:
            - paymentservicedb
            - broker
        ports:
          - "8014:8000"  # Expose container port 8000 to host port 8012  


  productservicedb:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: productservicedb
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5434:5432'
    volumes:
        - postgres_product_db:/var/lib/postgresql/data

  inventoryservicedb:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: inventoryservicedb
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5435:5432'
    volumes:
        - postgres_inventory_db:/var/lib/postgresql/data

  userservicedb:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: userservicedb
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5436:5432'
    volumes:
        - postgres_user_db:/var/lib/postgresql/data

  orderservicedb:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: orderservicedb
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5437:5432'
    volumes:
        - postgres_order_db:/var/lib/postgresql/data

  paymentservicedb:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: paymentservicedb
    environment:
        - POSTGRES_USER=ziakhan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=mydatabase
    ports:
        - '5438:5432'
    volumes:
        - postgres_payment_db:/var/lib/postgresql/data


  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: rizwanriaz1988@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin


volumes:
  postgres_db:
    driver: local
  postgres_product_db:
    driver: local
  postgres_inventory_db:
    driver: local
  postgres_user_db:
    driver: local
  postgres_order_db:
    driver: local
  postgres_payment_db:
    driver: local

networks:
  default:
    driver: bridge
